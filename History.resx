<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Mf+1d06G0vEAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="HistoryBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>134, 17</value>
  </metadata>
  <metadata name="DbDataSet3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="HistoryTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>303, 17</value>
  </metadata>
</root>